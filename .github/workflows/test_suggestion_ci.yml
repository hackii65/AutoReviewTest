name: Propose Unit Test on PR

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  propose-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Install required tools (e.g., GitHub CLI)
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      # Get the PR diff
      - name: Get PR diff
        run: gh pr diff ${{ github.event.number }} > pr_diff.txt

      # Check if the files in the specific directory have changes
      - name: Check for changes in specific directory
        id: changes
        run: |
          if grep -q "path/to/your/kotlin/files" pr_diff.txt; then
            echo "files_changed=true" >> $GITHUB_ENV
          else
            echo "files_changed=false" >> $GITHUB_ENV
          fi

      # If there are changes, generate unit tests using OpenAI
      - name: Generate Unit Test Proposals
        if: env.files_changed == 'true'
        run: |
          FILES=$(git diff --name-only HEAD~1)
          PROMPT="Generate unit tests for the following Kotlin code changes:\n$FILES"
          RESPONSE=$(curl https://api.openai.com/v1/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d '{
              "model": "gpt-4",
              "prompt": "'"$PROMPT"'",
              "max_tokens": 500
            }')
          echo "$RESPONSE" > unit_test_proposals.txt

      # Post the generated unit test proposals as a comment on the PR
      - name: Post Unit Test Proposals as PR comment
        if: env.files_changed == 'true'
        run: |
          COMMENT=$(cat unit_test_proposals.txt)
          gh pr comment ${{ github.event.number }} --body "$COMMENT"
